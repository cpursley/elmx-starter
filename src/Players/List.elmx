module Players.List exposing (..)

import Html exposing (..)
import Html.Attributes exposing (class)
import RemoteData exposing (WebData)
import Msgs exposing (Msg)
import Models exposing (Player)


-- LIST VIEW


view : WebData (List Player) -> Html Msg
view response =
    let
        listView =
            maybeList response
    in
        <div>
          {nav}
          {listView}
        </div>


nav : Html Msg
nav =
    <div class="clearfix mb2 white bg-black">
      <div class="left p2">Players</div>
    </div>


maybeList : WebData (List Player) -> Html Msg
maybeList response =
    case response of
        RemoteData.NotAsked ->
            <span></span>

        RemoteData.Loading ->
            <span>Loading...</span>

        RemoteData.Success players ->
            list players

        RemoteData.Failure error ->
            <span>{=(error |> toString)}</span>


list : List Player -> Html Msg
list players =
    let
        tableData =
            players |> List.map playerRow
    in
        <div class="p2">
          <table>
            <thead>
              <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Level</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {:tableData}
            </tbody>
          </table>
        </div>


playerRow : Player -> Html Msg
playerRow player =
    <tr>
      <td>{=player.id}</td>
      <td>{=player.name}</td>
      <td>{=(player.level |> toString)}</td>
      <td></td>
    </tr>
